(()=>{"use strict";var e,t={494:(e,t,s)=>{var i=s(260),n=s.n(i);class r extends n().Scene{constructor(e,t){super(e),this.config=t,this.screenCenter=[t.width/2,t.height/2],this.fontSize=34,this.lineHeight=42,this.fontOptions={fontSize:`${this.fontSize}px`,fill:"#FFF",fontWeight:"bold"}}create(){if(this.add.image(0,0,"sky2").setOrigin(0).setScale(1,1.5),this.config.canGoBack){this.add.image(this.config.width-10,this.config.height-10,"back").setInteractive().setScale(2).setOrigin(1).on("pointerup",(()=>{this.scene.start("MenuScene")}))}}createMenu(e,t){let s=0;e.forEach((e=>{const i=[this.screenCenter[0],this.screenCenter[1]+s];e.textGO=this.add.text(...i,e.text,this.fontOptions).setOrigin(.5,1),s+=this.lineHeight,t(e)}))}}const a=r;const h=class extends a{constructor(e){super("PlayScene",e),this.bird=null,this.pipes=null,this.isPaused=!1,this.pipeHorizontalDistance=0,this.FLAP_VELOCITY=300,this.score=0,this.scoreText="",this.currentDifficulty="easy",this.difficulties={easy:{pipeHorizontalDistanceRange:[300,350],pipeVerticalDistanceRange:[150,200]},normal:{pipeHorizontalDistanceRange:[280,330],pipeVerticalDistanceRange:[140,190]},hard:{pipeHorizontalDistanceRange:[250,310],pipeVerticalDistanceRange:[120,150]}}}create(){this.currentDifficulty="easy",super.create(),this.createBird(),this.createPipes(),this.createColliders(),this.createScore(),this.createPause(),this.handleInputs(),this.listenToEvents(),this.anims.create({key:"fly",frames:this.anims.generateFrameNumbers("bird",{start:0,end:7}),frameRate:8,repeat:-1}),this.bird.play("fly")}update(){this.checkGameStatus(),this.recyclePipes()}listenToEvents(){this.pauseEvent||(this.pauseEvent=this.events.on("resume",(()=>{this.initialTime=3,this.countDownText=this.add.text(...this.screenCenter,"fly in: "+this.initialTime,this.fontOptions).setOrigin(.5),this.timedEvent=this.time.addEvent({delay:1e3,callback:this.countDown,callbackScope:this,loop:!0})})))}countDown(){this.initialTime--,this.countDownText.setText(`fly in: ${this.initialTime}`),this.initialTime<=0&&(this.isPaused=!1,this.countDownText.setText(""),this.physics.resume(),this.timedEvent.remove())}createBG(){this.add.image(0,0,"sky2").setOrigin(0,0)}createBird(){this.bird=this.physics.add.sprite(this.config.startPosition.x,this.config.startPosition.y,"bird").setScale(.5).setOrigin(0),this.bird.setBodySize(this.bird.width-45,this.bird.height-20),this.bird.body.gravity.y=600,this.bird.setCollideWorldBounds(!0)}createPipes(){this.pipes=this.physics.add.group();for(let e=0;e<4;e++){const e=this.pipes.create(0,0,"pipe").setScale(.6,1.2).setImmovable(!0).setOrigin(0,1);e.setBodySize(this.pipes.width-100,this.pipes.height-50);const t=this.pipes.create(0,0,"pipe").setScale(.6,1.2).setImmovable(!0).setOrigin(0,0);t.setBodySize(this.pipes.width-100,this.pipes.height-50),this.placePipe(e,t)}this.pipes.setVelocityX(-200)}createColliders(){this.physics.add.collider(this.bird,this.pipes,this.gameOver,null,this)}createScore(){this.score=0,this.tempX=this.config.width/100;const e=localStorage.getItem("bestScore");this.scoreText=this.add.text(this.tempX,this.config.height/100,"Score: 0",{fontSize:"32px",fill:"#FFF"}),this.bestScore=this.add.text(this.tempX,this.config.height/15,`Best Score: ${e||0}`,{fontSize:"18px",fill:"#FFF"})}createPause(){this.isPaused=!1;this.add.image(this.config.width/100*99,this.config.height/100*99,"pause").setInteractive().setScale(3).setOrigin(1,1).on("pointerdown",(()=>{this.isPaused=!0,this.physics.pause(),this.scene.pause(),this.scene.launch("PauseScene")}))}handleInputs(){this.input.on("pointerdown",this.flap,this),this.input.keyboard.on("keydown-SPACE",this.flap,this),this.input.keyboard.on("keydown-J",this.flap,this)}checkGameStatus(){(this.bird.y<=0||this.bird.getBounds().bottom>=this.config.height)&&this.gameOver()}placePipe(e,t){const s=this.difficulties[this.currentDifficulty],i=this.getRightMostPipe();let n=Phaser.Math.Between(...s.pipeVerticalDistanceRange),r=Phaser.Math.Between(20,this.config.height-20-n),a=Phaser.Math.Between(...s.pipeHorizontalDistanceRange);e.x=i+a,e.y=r,t.x=e.x,t.y=e.y+n}recyclePipes(){const e=[];this.pipes.getChildren().forEach((t=>{t.getBounds().right<=0&&(e.push(t),2===e.length&&(this.placePipe(...e),this.increaseScore(),this.saveBestScore(),this.increaseDifficulty()))}))}increaseDifficulty(){5===this.score&&(this.currentDifficulty="normal"),11===this.score&&(this.currentDifficulty="hard")}getRightMostPipe(){let e=0;return this.pipes.getChildren().forEach((function(t){e=Math.max(t.x,e)})),e}saveBestScore(){const e=localStorage.getItem("bestScore"),t=e&&parseInt(e,10);(!t||this.score>t)&&localStorage.setItem("bestScore",this.score)}gameOver(){this.physics.pause(),this.bird.setTint(16734003),this.saveBestScore(),this.time.addEvent({delay:1e3,callback:()=>{this.scene.restart()},loop:!1})}flap(){this.isPaused||(this.bird.body.velocity.y=-this.FLAP_VELOCITY)}increaseScore(){this.score++,this.scoreText.setText(`Score: ${this.score}`)}};const c=class extends a{constructor(e){super("MenuScene",e),this.menu=[{scene:"PlayScene",text:"Play"},{scene:"ScoreScene",text:"Score"},{scene:null,text:"Exit"}]}create(){super.create(),this.createMenu(this.menu,this.setupMenuEvents.bind(this)),this.createCredit()}setupMenuEvents(e){const t=e.textGO;t.setInteractive(),t.on("pointerover",(()=>{t.setStyle({fill:"#ff0"})})),t.on("pointerout",(()=>{t.setStyle({fill:"#FFF"})})),t.on("pointerup",(()=>{e.scene&&this.scene.start(e.scene),"Exit"===e.text&&this.game.destroy(!0)}))}createCredit(){this.creditText=this.add.text(.5*this.config.width,.9*this.config.height,"Programmed by: Ashhad Muhammad",{fontSize:18,fill:"#FFF"}).setOrigin(.5)}};class o extends n().Scene{constructor(){super("PreloadScene")}preload(){this.load.image("sky2","assets/nightSky.png"),this.load.spritesheet("bird","assets/bird2.png",{frameWidth:100,frameHeight:67.5}),this.load.image("pipe","assets/pipes.png"),this.load.image("pause","assets/pause.png"),this.load.image("back","assets/back.png")}create(){this.scene.start("MenuScene")}}const p=o;const l=class extends a{constructor(e){super("ScoreScene",{...e,canGoBack:!0})}create(){super.create();const e=localStorage.getItem("bestScore");this.bestScore=this.add.text(...this.screenCenter,`Best Score: ${e||0}`,{fontSize:"18px",fill:"#000"}).setOrigin(.5,0)}};const d=class extends a{constructor(e){super("PauseScene",e),this.menu=[{scene:"PlayScene",text:"Continue"},{scene:"MenuScene",text:"Exit"}]}create(){super.create(),this.createMenu(this.menu,this.setupMenuEvents.bind(this))}setupMenuEvents(e){const t=e.textGO;t.setInteractive(),t.on("pointerover",(()=>{t.setStyle({fill:"#ff0"})})),t.on("pointerout",(()=>{t.setStyle({fill:"#000000"})})),t.on("pointerup",(()=>{e.scene&&"Continue"===e.text?(this.scene.stop(),this.scene.resume(e.scene)):(this.scene.stop("PlayScene"),this.scene.start(e.scene))}))}},u={width:400,height:600,startPosition:{x:40,y:300}},g=[p,c,l,h,d],f=e=>new e(u),y={type:n().AUTO,...u,pixelArt:!0,physics:{default:"arcade",arcade:{debug:!0}},scene:g.map(f)};new(n().Game)(y)}},s={};function i(e){var n=s[e];if(void 0!==n)return n.exports;var r=s[e]={exports:{}};return t[e].call(r.exports,r,r.exports,i),r.exports}i.m=t,e=[],i.O=(t,s,n,r)=>{if(!s){var a=1/0;for(p=0;p<e.length;p++){for(var[s,n,r]=e[p],h=!0,c=0;c<s.length;c++)(!1&r||a>=r)&&Object.keys(i.O).every((e=>i.O[e](s[c])))?s.splice(c--,1):(h=!1,r<a&&(a=r));if(h){e.splice(p--,1);var o=n();void 0!==o&&(t=o)}}return t}r=r||0;for(var p=e.length;p>0&&e[p-1][2]>r;p--)e[p]=e[p-1];e[p]=[s,n,r]},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var s in t)i.o(t,s)&&!i.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={143:0};i.O.j=t=>0===e[t];var t=(t,s)=>{var n,r,[a,h,c]=s,o=0;if(a.some((t=>0!==e[t]))){for(n in h)i.o(h,n)&&(i.m[n]=h[n]);if(c)var p=c(i)}for(t&&t(s);o<a.length;o++)r=a[o],i.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return i.O(p)},s=self.webpackChunkphaser_webpack_boilerplate=self.webpackChunkphaser_webpack_boilerplate||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})();var n=i.O(void 0,[736],(()=>i(494)));n=i.O(n)})();